; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#ifndef VERSION
#define VERSION "snapshot"
#endif

[Setup]
AppCopyright=Copyright 2005-2009 Steve Borho and others
AppName=hgtk
AppVerName=hgtk {#VERSION}
InfoAfterFile=contrib/win32/postinstall.txt
LicenseFile=COPYING.txt
ShowLanguageDialog=yes
AppPublisher=Steve Borho
AppPublisherURL=http://tortoisehg.org/
AppSupportURL=http://tortoisehg.org/
AppUpdatesURL=http://tortoisehg.org/
AppID=TortoiseHg
AppContact=Steve Borho <steve@borho.org>
OutputBaseFilename=Hgtk-{#VERSION}
DefaultDirName={pf}\TortoiseHg
SourceDir=..\..
VersionInfoDescription=TortoiseHg Dialogs for Mercurial SCM
VersionInfoCopyright=Copyright 2005-2009 Steve Borho and others
VersionInfoCompany=Steve Borho and others
InternalCompressLevel=max
SolidCompression=true
SetupIconFile=icons\thg_logo.ico
UninstallDisplayIcon={app}\thg_logo.ico
WizardImageFile=..\misc\install-wizard.bmp
WizardImageStretch=no
WizardImageBackColor=$ffffff
WizardSmallImageFile=..\misc\install-wizard-small.bmp
AllowNoIcons=true
DefaultGroupName=TortoiseHg
SetupLogging=yes

[Types]
Name: full; Description: Full installation
Name: custom; Description: Custom installation; Flags: iscustom

[Components]
Name: main; Description: Main Files (includes 'hg' and 'hgtk' commands); Types: full custom; Flags: fixed
Name: help; Description: Help Files; Types: full
Name: hgbook; Description: The book 'Mercurial: The Definitive Guide' (PDF); Types: full

[Files]
Source: ..\build-hg\contrib\mercurial.el; DestDir: {app}\contrib
Source: ..\build-hg\contrib\vim\*.*; DestDir: {app}\contrib\vim
Source: ..\build-hg\contrib\zsh\*.*; DestDir: {app}\contrib\zsh
Source: ..\build-hg\contrib\bash\*.*; DestDir: {app}\contrib\bash
Source: ..\build-hg\contrib\hgk; DestDir: {app}/contrib
Source: ..\build-hg\contrib\win32\ReadMe.html; DestDir: {app}; Flags: isreadme
Source: ..\build-hg\mercurial\templates\*.*; DestDir: {app}\templates; Flags: recursesubdirs createallsubdirs
Source: ..\build-hg\mercurial\help\*.txt; DestDir: {app}\help; Components: help
Source: ..\build-hg\mercurial\locale\*.*; DestDir: {app}\locale; Flags: recursesubdirs createallsubdirs
Source: ..\build-hg\i18n\*.*; DestDir: {app}\i18n
Source: ..\build-hg\doc\*.html; DestDir: {app}\docs; Flags: ignoreversion; Components: help
Source: ..\build-hg\doc\style.css; DestDir: {app}\docs; Flags: ignoreversion; Components: help
Source: {app}\Mercurial.ini; DestDir: {app}\backup; Flags: external skipifsourcedoesntexist uninsneveruninstall
Source: contrib\win32\mercurial.ini; DestDir: {app}; DestName: Mercurial.ini; AfterInstall: FileExpandString('{app}\Mercurial.ini')
Source: contrib\win32\mercurialuser.ini; DestDir: {%USERPROFILE}; DestName: Mercurial.ini; AfterInstall: FileExpandStringEx('{%USERPROFILE}\Mercurial.ini'); Flags: onlyifdoesntexist 
Source: ReleaseNotes.txt; DestDir: {app}; DestName: ReleaseNotes.txt
Source: ..\contrib\*.exe; DestDir: {app}
Source: ..\contrib\*.dll; DestDir: {app}
Source: dist\*.dll; DestDir: {app}; Flags: ignoreversion
Source: dist\library.zip; DestDir: {app}
Source: doc\build\pdf\*.pdf; DestDir: {app}/docs; Flags: ignoreversion; Components: help
Source: doc\build\chm\*.chm; DestDir: {app}/docs; Flags: ignoreversion; Components: help
Source: icons\*; DestDir: {app}\icons; Flags: ignoreversion recursesubdirs createallsubdirs
Source: dist\gtk\*; DestDir: {app}\gtk; Flags: ignoreversion recursesubdirs createallsubdirs
Source: locale\*.*; DestDir: {app}\locale; Flags: recursesubdirs createallsubdirs
Source: i18n\*.*; DestDir: {app}\i18n; Flags: recursesubdirs createallsubdirs
Source: COPYING.txt; DestDir: {app}; DestName: Copying.txt
Source: icons\thg_logo.ico; DestDir: {app}
Source: ..\misc\hgbook.pdf; DestDir: {app}/docs; Flags: ignoreversion; Components: hgbook

[INI]
Filename: {app}\Mercurial.url; Section: InternetShortcut; Key: URL; String: http://mercurial.selenic.com/
Filename: {app}\TortoiseHg.url; Section: InternetShortcut; Key: URL; String: http://tortoisehg.org/

[Icons]
Name: {group}\TortoiseHg Book (chm); Filename: {app}\docs\TortoiseHg.chm; Components: help
Name: {group}\TortoiseHg Book (pdf); Filename: {app}\docs\TortoiseHg.pdf; Components: help
Name: {group}\TortoiseHg Web Site; Filename: {app}\TortoiseHg.url
Name: {group}\Mercurial Book; Filename: {app}\docs\hgbook.pdf; Components: hgbook
Name: {group}\Mercurial Command Reference; Filename: {app}\docs\hg.1.html; Components: help
Name: {group}\Mercurial Config Reference; Filename: {app}\docs\hgrc.5.html; Components: help
Name: {group}\Mercurial Web Site; Filename: {app}\Mercurial.url
Name: {group}\Uninstall TortoiseHg; Filename: {uninstallexe}

[Run]
Filename: {app}\add_path.exe; Parameters: {app}; StatusMsg: Adding the installation path to the search path...

[UninstallRun]
Filename: {app}\add_path.exe; Parameters: /del {app}

[UninstallDelete]
Type: files; Name: {app}\Mercurial.url
Type: files; Name: {app}\TortoiseHg.url

[Registry]
Root: HKLM; Subkey: Software\TortoiseHg; Flags: uninsdeletekey; ValueData: {app}
Root: HKLM; Subkey: Software\Mercurial; Flags: uninsdeletekey; ValueData: {app}\Mercurial.ini

[Code]

var UserInfoPage: TInputQueryWizardPage;
var GetUserName: Boolean;

procedure FileExpandString(fn: String);
var
  InFile: String;
  i: Integer;
  InFileLines: TArrayOfString;
begin
  InFile := ExpandConstant(fn);
  LoadStringsFromFile(InFile, InFileLines);
  for i:= 0 to GetArrayLength(InFileLines)-1 do
    InFileLines[i] := ExpandConstant(InFileLines[i]);
  SaveStringsToFile(InFile, InFileLines, False);
end;

procedure InitializeWizard(); 
begin
  if (not(FileExists(ExpandConstant('{%USERPROFILE}\Mercurial.ini')))) then
  begin
    // Create the page
    UserInfoPage := CreateInputQueryPage(wpUserInfo,
      'Personal Information', 'Who are you?',
      'Please specify your name and email address, then click Next.');

    // Add items (False means it's not a password edit)
    UserInfoPage.Add('Full Name:', False);
    UserInfoPage.Add('Email address:', False);

    // Set initial values (optional)
    UserInfoPage.Values[0] := ExpandConstant('{username}');
    GetUserName := True;
  end
  else
    GetUserName := False;
end;

procedure FileExpandStringEx(fn: String);
var
  InFile: String;
  i: Integer;
  InFileLines: TArrayOfString;
begin
  if (GetUserName) then
  begin
    InFile := ExpandConstant(fn);
    LoadStringsFromFile(InFile, InFileLines);
    for i:= 0 to GetArrayLength(InFileLines)-1 do
    begin
      InFileLines[i] := ExpandConstantEx(InFileLines[i], 
        'hgusername', 
         UserInfoPage.Values[0] + ' <' + UserInfoPage.Values[1] + '>');
    end;
    SaveStringsToFile(InFile, InFileLines, False);
  end;
end;
