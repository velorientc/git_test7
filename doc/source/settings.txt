===================
TortoiseHg Settings
===================

.. module:: settings.dialog
	:synopsis: Dialog used to set preferences

.. figure:: figures/settings.png
	:alt: Settings dialog

	Settings dialog

The Settings dialog is used to configure both TortoiseHg and the
underlying Mercurial DVCS.  Since TortoiseHg uses Mercurial's underlying
configuration system to store and retrieve its settings, these are
essentially the same thing.

Mercurial on Windows has a three-tier configuration system.

1) A site-wide configuration file in
   :file:`C:\\Program Files\\TortoiseHg\\Mercurial.ini`
   This file is read first and thus has the lowest priority.
2) A per-user configuration file in
   :file:`C:\\Documents and Settings\\username\\Mercurial.ini`
   This file is read second and thus can override settings in the
   site-wide configuration file.
3) A per-repository configuration file in :file:`repo-root\\.hg\\hgrc` This
   file is read last and can override site-wide and user global settings.

The site-wide file can be overwritten on upgrades so it is recommended
that you do not make changes to this file.  Instead, you should make
changes to your user :file:`Mercurial.ini` and/or the repository
:file:`hgrc` file.  The TortoiseHg Settings dialog enforces this
suggestion by only operating in two modes:

Global
	edits your user :file:`Mercurial.ini` file
Repository
	edits a repository :file:`.hg/hgrc` file

In TortoiseHg 0.8, you may toggle between the two modes using the combo
box at the top of the dialog.

Most TortoiseHg users will want to store all configurables in their
global user settings, and only use the repository hgrc to store paths
(remote repository aliases) and web settings, though it is possible to
override many configurables per-repository (a common example is to
configure a different username for use in a repository).  Also note that
the user and repository configuration files may not exist until you run
the Settings dialog for the first time.

Tabs
====

The Settings tool is a tabbed application.

Each tab corresponds roughly to a section of your :file:`Mercurial.ini`
file, though there is a certain amount of overlap. Some sections were
split across multiple tabs for clarity.

Every tab except of the :guilabel:`Paths` tab has the same format, a list of
configurable options with a drop-down combo box with possible values and
a history of options you have used for that setting. The configurable
name (label) has a tooltip which describes in more detail what you are
configuring and its default value.

The :guilabel:`Paths` tab is where you can store URLs (paths) to related
repositories. It is rare to store paths in the site-wide or user
configuration files, most of the time you will only store these in a
repository configuration file. Mercurial has two special path names that
can be used as default targets for some operations.

default
	the default URL to pull from, usually clone source
default-push
	the default push target when using the command line

Please consult the Mercurial wiki for more detailed information about
these configurables (except for the first three tabs:
:guilabel:`TortoiseHg`, :guilabel:`Commit`, :guilabel:`Changelog`, which
are specifically for TortoiseHg).

TortoiseHg
----------

:guilabel:`3-way Merge Tool:`
	TODO
	
:guilabel:`Visual Diff Command:`
	TODO

:guilabel:`Skip Diff Window:`
	TODO

:guilabel:`Visual Editor:`
	TODO

:guilabel:`Tab Width:`
	TODO

:guilabel:`Max Diff Size:`
	TODO

:guilabel:`Bottom Diffs:`
	TODO
	
Commit
------

:guilabel:`Username:`
	TODO

:guilabel:`External Commit Tool:`
	TODO

:guilabel:`Summary Line Length:`
	TODO

:guilabel:`Message Line Length:`
	TODO
	
Changelog
---------

:guilabel:`Author Coloring:`
	TODO

:guilabel:`Long Summary:`
	TODO

:guilabel:`Log Batch Size:`
	TODO

:guilabel:`Copy Hash:`
	TODO

Sync
----	

:guilabel:`After pull operation:`
	TODO

:guilabel:`Remote repository paths`
	TODO

Web
---
	
:guilabel:`Name:`
	TODO

:guilabel:`Description:`
	TODO

:guilabel:`Contact:`
	TODO

:guilabel:`Style:`
	TODO

:guilabel:`Archive Formats:`
	TODO

:guilabel:`Port:`
	TODO

:guilabel:`Push Requires SSL:`
	TODO

:guilabel:`Stripes:`
	TODO

:guilabel:`Max Files:`
	TODO

:guilabel:`Max Changes:`
	TODO

:guilabel:`Allow Push:`
	TODO

:guilabel:`Deny Push:`
	TODO

:guilabel:`Encoding:`
	TODO

Proxy
-----
	
:guilabel:`Host:`
	TODO
	
:guilabel:`Bypass List:`
	TODO

:guilabel:`Password:`
	TODO

:guilabel:`User:`
	TODO

Email
-----

:guilabel:`From:`
	TODO

:guilabel:`To:`
	TODO

:guilabel:`Cc:`
	TODO

:guilabel:`Bcc:`
	TODO

:guilabel:`method:`
	TODO

:guilabel:`SMTP Host:`
	TODO

:guilabel:`SMTP Port:`
	TODO

:guilabel:`SMTP TLS:`
	TODO

:guilabel:`SMTP Username:`
	TODO

:guilabel:`SMTP Password:`
	TODO

:guilabel:`Local Hostname:`
	TODO

Diff
----

:guilabel:`Git Format:`
	TODO

:guilabel:`No Dates:`
	TODO

:guilabel:`Show Function:`
	TODO
	
:guilabel:`Ignore White Space:`
	TODO

:guilabel:`Ignore WS Amount:`
	TODO

:guilabel:`Ignore Blank Lines:`
	TODO

	
	
From command line
-----------------

The setting dialog can be started from command line ::

	hgtk repoconfig

for the repository settings or ::

	hgtk userconfig

for the user configuration.

The syntax is simple, no options or parameters are needed, except the global options.

.. vim: noet ts=4
