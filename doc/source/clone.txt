Clone a repository
=======================

.. module:: clone.dialog
	:synopsis: Dialog used to clone a repository

To clone a repository you have to run the clone dialog.
From the explorer context menu select :menuselection:`TortoiseHg... --> Clone a repository`
or type :command:`hgtk clone`. 

.. figure:: figures/clone.png
	:alt: Clone dialog

	Clone Dialog
	
:guilabel:`Source Path`
	It is the path (or URL) of the repository that will be cloned. Use
	the :guilabel:`Browse...` to choose a local folder.
:guilabel:`Destination Path`
	It is the path of destination directory, a folder with the same name
	of source repository will be created within this directory.

Under the :guilabel:`Advanced options` expander you will find:

:guilabel:`Clone To Revision`
	You can limit the clone up to this revision. Even the tags created
	after this revision will not be imported.
:guilabel:`do not update the new working directory`
	If checked, after the clone the working directory will be empty. It
	is useful when you have to clone a repository with the purpose of
	central repository, or backup, where you have only, in the future,
	to *push* and *pull*.
:guilabel:`use pull protocol to copy metadata`
	When the source and destination are on the same filesystem,
	Mercurial tries to use hardlinks. Some filesystems, such as AFS
	implement hardlink incorrectly, but do not report errors. Use this
	option to avoid hardlinks.
:guilabel:`use uncompressed transfer`
	To use uncompressed transfer (fast over LAN).
:guilabel:`use proxy server`
	To use the proxy server configured in :menuselection:`TortoiseHg... --> Global Settings --> Proxy`.
	This is enabled only if a proxy is configured.
:guilabel:`Remote Cmd`
	Specify a Mercurial command to run  on the remote side.

From command line
-----------------

The clone tool can be started from command line ::

	hgtk clone

The syntax is ::

	hgtk clone [SOURCE] [DEST]

where [SOURCE] and [DEST] are, the paths of source repository and destination folder.

.. vim: noet ts=4
