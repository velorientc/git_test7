======================
TortoiseHg Synchronize
======================

.. module:: synchronize.dialog
   :synopsis: Dialog used to perform synchronization operations

This page describes the 0.7 version of synchronize
	
The synchronize tool is used to transmit changesets between repositories
and to email recipients.


.. figure:: figures/synchronize.png
   :alt: Synchronize dialog

   Synchronize dialog

:guilabel:`Incoming`
	show changesets that would be pulled from target repository
:guilabel:`Pull`
	pull incoming changesets from target repository [1]
:guilabel:`Outgoing`
	show changesets that would be pushed to target repository
:guilabel:`Push`
	push outgoing changesets to target repository
:guilabel:`Email`
	send outgoing changesets (to target repository) as email
:guilabel:`Stop`
	stop current operation
:guilabel:`Configure`
	Configure repository paths (aliases)
					
1) The :guilabel:`Pull` toolbutton has a drop-down menu with extra options that
   are only applicable to pull operations:  :guilabel:`Update after Pull`, and
   :guilabel:`Use fetch`. See the fetch extension documentation for it's behavior.

The :guilabel:`Repo:` button will open a directory finder to locate another
repository on your local computer to synchronize with. Similarly, the
:guilabel:`Bundle` button will open a file finder to locate a Mercurial bundle
(:command:`.hg`) file to pull changes from.

The text entry/combo box is where you enter or select paths of target
repositories. The synchronize tool will seed the drop-down list with
path aliases configured for this repository, and with the most 10 recent
paths used with any repository. There will be a dashed separator between
the configured paths and the history.

The :guilabel:`use proxy` button is a quick way to disable your proxy
configuration for just a few operations. The button is only sensitive
when you have an http proxy configured.

All operations which require authentication will pop up dialog boxes to
get the required information from the user.  TortoiseHg uses the
TortoisePlink tool (borrowed from the TortoiseSVN distribution) to
handle *ssh:* connections and authentication.  See the FAQ_ for help if
you have trouble connecting to ssh servers.

.. _FAQ: http://bitbucket.org/tortoisehg/stable/wiki/FAQ#tortoisehg-faq

Under the :guilabel:`Advanced Options` fold-up panel are a number of configurables
that are valid for most push/pull operations.
		
:guilabel:`Specify target revision for transmission`
	to avoid sending all revisions
:guilabel:`Force pull or push`
	override warnings about multiple heads or unrelated repositories
:guilabel:`Show patches`
	show diffs in incoming and outging changes
:guilabel:`Show Newest First`
	reverse order that changesets are listed
:guilabel:`Show No Merges`
	filter out merge changesets from output (does not affect push/pull)


After Pull
----------

After changesets are pulled into your repository, two buttons may appear
at the bottom of the dialog:

:guilabel:`View pulled changesets`
	Open the changelog viewer and inspect pulled changesets
:guilabel:`Update to tip`
	Update your working directory to the new tip

Either button may be hidden if it is not applicable.

Email
-----

The email dialog can be launched from two TortoiseHg tools.

1) The changelog tool, in which case the user intends to email a single
   revision

2) The synchronize tool, in which case the user intends to email all
   outgoing changes to the current target repository (it's good practice to
   check the outgoing changes before launching the email dialog).

.. figure:: figures//email.png
   :alt: Email dialog

   Email dialog
   
The :guilabel:`Send:guilabel:` button is obvious, and the :guilabel:`Configure` dialog predictably
opens the TortoiseHg Settings dialog to the email tab where you can
configure your SMTP settings and set default :guilabel:`To:` and :guilabel:`From:` addresses.

Please consult the Mercurial documentation for the differences between
plain patches, HG patches, Git patches, and bundles.

Changes since 0.7
-----------------

* Path drop-down list no longer includes most-recently-used paths.  It
  only includes configured repository paths.
* Email dialog now has buttons for configuring in-reply-to tags and the
  attachment types.
* Email dialog now sends an intro message only when one has been
  entered, regardless of patch count.
